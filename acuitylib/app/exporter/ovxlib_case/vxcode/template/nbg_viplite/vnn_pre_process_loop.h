/****************************************************************************
*   Generated by ACUITY #ACUITY_VERSION#
*
*   Neural Network appliction pre-process header file
****************************************************************************/
#ifndef _VNN_PRE_PROCESS_H_
#define _VNN_PRE_PROCESS_H_

#include <math.h>

#define VSI_NN_FLOAT32_INF          (0x7F800000)
#define VSI_NN_FLOAT32_NAN          (0x7FC00000)
#define VSI_NN_FLOAT64_INF          (0x7FF0000000000000)
#define VSI_NN_FLOAT64_NAN          (0x7FF8000000000000)

#define vsi_nn_max(a,b)             (((a) > (b)) ? (a) : (b))
#define vsi_nn_min(a,b)             (((a) < (b)) ? (a) : (b))

typedef enum _vnn_file_type
{
    NN_FILE_NONE,
    NN_FILE_TENSOR,
    NN_FILE_QTENSOR,
    NN_FILE_JPG,
    NN_FILE_BINARY
} vnn_file_type_e;

vip_status_e vnn_CreateInOutBufPrepareNetwork(
    vip_network_items *network_items);

vip_status_e vnn_SetNetworkInOut(
    vip_network_items *network_items);

unsigned int load_file(
    const char *name,
    void *dst);

unsigned int get_file_size(
    const char *name);

vip_status_e vnn_Float32ToDtype(
    float   src,
    vip_uint8_t   *dst,
    const vip_buffer_create_params_t *buf_param);

vip_uint32_t vnn_LoadDataFromFile(
    vip_network_items *network_items,
    const char *fname,
    vip_uint8_t **buf_ptr,
    vip_uint32_t index);

#endif
